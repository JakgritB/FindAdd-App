'use client';

import { useState } from 'react';
import SearchBar from './components/SearchBar';
import PlacesList from './components/PlacesList';
import RoutePanel from './components/RoutePanel';
import ExportPanel from './components/ExportPanel';
import LongdoMap from './components/LongdoMap';
import NavigationMode from './components/NavigationMode';
import { LongdoPlace, RouteResponse } from './types/longdo';

export default function Home() {
  const [places, setPlaces] = useState<LongdoPlace[]>([]);
  const [selectedPlace, setSelectedPlace] = useState<LongdoPlace | null>(null);
  const [calculatedRoute, setCalculatedRoute] = useState<RouteResponse | null>(null);
  const [showNavigation, setShowNavigation] = useState(false);
  const [currentUserPosition, setCurrentUserPosition] = useState<{lat: number, lon: number} | null>(null);

  const handleAddPlace = (place: LongdoPlace) => {
    if (places.length >= 60) {
      alert('‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 60 ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà');
      return;
    }

    const exists = places.some(p => 
      p.lat === place.lat && p.lon === place.lon
    );
    
    if (exists) {
      alert('‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß');
      return;
    }

    setPlaces([...places, place]);
    setCalculatedRoute(null);
  };

  const handleRemovePlace = (id: string) => {
    setPlaces(places.filter(p => p.id !== id));
    setCalculatedRoute(null);
  };

  const handleSelectPlace = (place: LongdoPlace) => {
    setSelectedPlace(place);
  };

  const handleRouteCalculated = (route: RouteResponse | null) => {
    setCalculatedRoute(route);
  };

  const handleStartNavigation = () => {
    if (!calculatedRoute) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡πà‡∏≠‡∏ô');
      return;
    }
    
    if (window.confirm('‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏≠‡∏û?\n\n‚ö†Ô∏è ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:\n- ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ï‡∏•‡∏≠‡∏î‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á\n- ‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà‡∏°‡∏≤‡∏Å\n- ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö GPS ‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå')) {
      setShowNavigation(true);
    }
  };

  const handleUpdatePosition = (lat: number, lon: number) => {
    setCurrentUserPosition({ lat, lon });
  };

  const handleCloseNavigation = () => {
    setShowNavigation(false);
    setCurrentUserPosition(null);
  };

  // ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î‡∏ô‡∏≥‡∏ó‡∏≤‡∏á ‡πÅ‡∏™‡∏î‡∏á NavigationMode ‡πÅ‡∏ó‡∏ô
  if (showNavigation && calculatedRoute) {
    return (
      <NavigationMode
        route={calculatedRoute}
        onUpdatePosition={handleUpdatePosition}
        onClose={handleCloseNavigation}
      />
    );
  }

  return (
    <main className="min-h-screen bg-gray-100 p-4">
      <div className="max-w-7xl mx-auto">
        <div className="mb-6">
          <h1 className="text-3xl font-bold text-gray-900">
            üöö FindAdd - ‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏™‡πà‡∏á‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞
          </h1>
          <p className="text-gray-600 mt-2">
            üìç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ | ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î | ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢ GPS
          </p>
        </div>
        
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          <div className="lg:col-span-1 space-y-4">
            <SearchBar onAddPlace={handleAddPlace} />
            <PlacesList 
              places={places}
              onRemovePlace={handleRemovePlace}
              onSelectPlace={handleSelectPlace}
            />
            <RoutePanel 
              places={places}
              onRouteCalculated={handleRouteCalculated}
              onStartNavigation={handleStartNavigation}
            />
            {calculatedRoute && (
              <ExportPanel 
                places={places}
                route={calculatedRoute}
              />
            )}
          </div>
          
          <div className="lg:col-span-2">
            <LongdoMap 
              places={places}
              selectedPlace={selectedPlace}
              route={calculatedRoute}
              userPosition={currentUserPosition}
            />
            
            {places.length === 0 && (
              <div className="mt-4 p-4 bg-blue-50 rounded-lg border border-blue-200">
                <h3 className="font-semibold text-blue-900 mb-2">üìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:</h3>
                <ol className="text-sm text-blue-800 space-y-1">
                  <li>1. üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏û‡∏±‡∏™‡∏î‡∏∏</li>
                  <li>2. üìç ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 60 ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</li>
                  <li>3. üó∫Ô∏è ‡∏Å‡∏î‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ô‡∏≥‡∏ó‡∏≤‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î</li>
                  <li>4. üöó ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏≠‡∏û ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô Google Maps</li>
                  <li>5. üì§ ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ä‡∏£‡πå‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö</li>
                </ol>
              </div>
            )}
          </div>
        </div>
      </div>
    </main>
  );
}